---
interface Props {
  id: string;
  img: string | null;
  success: boolean | null;
  flightNumber: number;
  details: string | null;
}

const { id, img, success, flightNumber, details } = Astro.props;
const launchStatus =
  success === null ? "Pending" : success === true ? "Succesful" : "Failure";
const defaultImg =
  "https://www.elonx.net/wp-content/uploads/Polaris_Dawn-300x300.png";
---

<a
  href={`/launch/${id}`}
  class="rounded-lg border shadow-xl bg-gray-800 border-gray-700
  hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition
  flex flex-col"
>
  <picture class="flex justify-center p-4 w-48 h-auto mx-auto">
    {
      img !== null ? (
        <img
          class="mb-5 rounded-lg aspect-square"
          src={img}
          alt={`Patch for launch ${id}`}
        />
      ) : (
        <img
          class="mb-5 rounded-lg aspect-square"
          src={defaultImg}
          alt="Patch for SpaceX Mission"
        />
      )
    }
  </picture>

  <header class="p-4 flex-grow">
    <span
      class:list={[
        "p-2 rounded-lg font-semibold tracking-wide",
        {
          "bg-green-400 text-green-900": success === true,
          "bg-red-400 text-red-900": success === false,
          "bg-gray-500 text-gray-900": success === null,
        },
      ]}
    >
      {launchStatus}
    </span>

    <h2 class="my-2 text-2xl font-bold tracking-wide text-white">
      {`Flight #${flightNumber}`}
    </h2>
    {
      details !== null ? (
        <p class="text-lg font-extralight text-gray-200">
          {details?.length > 100 ? details.slice(0, 100) + " ..." : details}
        </p>
      ) : (
        <p class="text-lg font-extralight text-gray-400">
          No details about the launch
        </p>
      )
    }
  </header>
</a>
